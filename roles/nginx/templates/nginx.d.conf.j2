upstream grafana {
    server localhost:3000;
}

upstream nextcloud {
    server 127.0.0.1:8888;
}

upstream archmirror {
	server 127.0.0.1:8080;
}

upstream alexjorgef {
	server 192.168.1.212:80;
}

upstream ssl-alexjorgef {
	server 192.168.1.212:443;
}

server {
    listen       80;
    listen       [::]:80;
    server_name  *.{{ server_root_domain }};

    access_log   /var/log/nginx/{{ server_root_domain }}/access.log reduced;
    error_log    /var/log/nginx/{{ server_root_domain }}/error.log;

    include snippets/letsencrypt.conf;

    location / {
        access_log off;
        return 301 https://$host$request_uri;
    }
}

server {
    listen       80;
    listen       [::]:80;
    server_name  *.alexjorgef.com;

    access_log   /var/log/nginx/alexjorgef.com/access.log reduced;
    error_log    /var/log/nginx/alexjorgef.com/error.log;

    location / {
        access_log off;
        proxy_pass http://alexjorgef;
    }
}

server {
    listen       443 ssl http2;
    listen       [::]:443 ssl http2;
    server_name  {{ server_http_domain }};

    access_log   /var/log/nginx/{{ server_http_domain }}/access.log reduced;
    error_log    /var/log/nginx/{{ server_http_domain }}/error.log;

    ssl_certificate      /etc/letsencrypt/live/{{ server_http_domain }}/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/{{ server_http_domain }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ server_http_domain }}/chain.pem;

    root /srv/http;

    index index.html index.htm index.php;

    location /grafana/ {
        access_log   /var/log/nginx/{{ server_http_domain }}/access.log main;
        proxy_pass http://grafana;
        proxy_set_header Host                 $http_host;
        proxy_set_header X-Real-IP            $remote_addr;
        proxy_set_header X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto    "https";
    }

    location / {
        add_header Content-Type text/plain;
        return 200 "Nothing to see here.";
    }
}

server {
    listen       443 ssl http2;
    listen       [::]:443 ssl http2;
    server_name  {{ server_archmirror_domain }};

    access_log   /var/log/nginx/{{ server_archmirror_domain }}/access.log reduced;
    error_log    /var/log/nginx/{{ server_archmirror_domain }}/error.log;

    ssl_certificate      /etc/letsencrypt/live/{{ server_archmirror_domain }}/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/{{ server_archmirror_domain }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ server_archmirror_domain }}/chain.pem;

    root /srv/http;

    index index.html index.htm index.php;

    location / {
        access_log   /var/log/nginx/{{ server_archmirror_domain }}/access.log main;
        proxy_pass http://archmirror/;
        proxy_set_header Host                 $http_host;
        proxy_set_header X-Real-IP            $remote_addr;
        proxy_set_header X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto    "https";
    }
}

server {
    listen       443 ssl http2;
    listen       [::]:443 ssl http2;
    server_name  {{ nextcloud_http_domain }};

    access_log   /var/log/nginx/{{ nextcloud_http_domain }}/access.log reduced;
    error_log    /var/log/nginx/{{ nextcloud_http_domain }}/error.log;

    ssl_certificate      /etc/letsencrypt/live/{{ nextcloud_http_domain }}/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/{{ nextcloud_http_domain }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ nextcloud_http_domain }}/chain.pem;

    root /srv/http;

    index index.html index.htm index.php;

    client_max_body_size 1024M;

    location /.well-known/carddav {
        return 301 $scheme://$host/remote.php/dav;
    }

    location /.well-known/caldav {
        return 301 $scheme://$host/remote.php/dav;
    }

    location / {
        proxy_pass http://nextcloud;
        proxy_set_header Host                 $http_host;
        proxy_set_header X-Real-IP            $remote_addr;
        proxy_set_header X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto    "https";
        proxy_connect_timeout       300;
        proxy_send_timeout          300;
        proxy_read_timeout          300;
        send_timeout                300;
    }
}
